
CREATE TABLE customer (
    customer_id VARCHAR(50),
    gender VARCHAR(10),
    age INT,
    age_group VARCHAR(20),
    item_purchased VARCHAR(100),
    category VARCHAR(50),
    purchase_amount DECIMAL(10,2),
    review_rating DECIMAL(3,1),
    discount_applied VARCHAR(3),
    subscription_status VARCHAR(3),
    shipping_type VARCHAR(20),
    previous_purchases INT
	);
	
INSERT INTO customer VALUES
('CUST001', 'Male', 45, 'Middle-aged', 'Blouse', 'Clothing', 59.99, 4.2, 'Yes', 'Yes', 'Express', 3),
('CUST002', 'Female', 28, 'Young Adult', 'Sneakers', 'Footwear', 89.99, 4.7, 'No', 'No', 'Standard', 1),
('CUST003', 'Female', 35, 'Adult', 'Jacket', 'Clothing', 129.99, 4.5, 'Yes', 'Yes', 'Express', 8),
('CUST004', 'Male', 52, 'Middle-aged', 'Watch', 'Accessories', 199.99, 4.8, 'No', 'No', 'Standard', 12),
('CUST005', 'Female', 23, 'Young Adult', 'Dress', 'Clothing', 79.99, 4.1, 'Yes', 'No', 'Express', 2),
('CUST006', 'Male', 41, 'Adult', 'Running Shoes', 'Footwear', 119.99, 4.6, 'No', 'Yes', 'Standard', 5),
('CUST007', 'Female', 31, 'Adult', 'Handbag', 'Accessories', 149.99, 4.9, 'Yes', 'Yes', 'Express', 15),
('CUST008', 'Male', 26, 'Young Adult', 'T-Shirt', 'Clothing', 29.99, 3.8, 'No', 'No', 'Standard', 1),
('CUST009', 'Female', 48, 'Middle-aged', 'Skirt', 'Clothing', 69.99, 4.4, 'Yes', 'No', 'Express', 7),
('CUST010', 'Male', 33, 'Adult', 'Backpack', 'Accessories', 89.99, 4.3, 'No', 'Yes', 'Standard', 4);


--Q1. What is the total revenue generated by male vs. female customers?
SELECT 
    gender, 
    ROUND(SUM(purchase_amount), 2) as revenue
FROM customer
GROUP BY gender;

--Q2. Which customers used a discount but still spent more than the average purchase amount? 
SELECT 
    customer_id, 
    purchase_amount 
FROM customer 
WHERE discount_applied = 'Yes' 
    AND purchase_amount >= (SELECT AVG(purchase_amount) FROM customer);

-- Q3. Which are the top 5 products with the highest average review rating?
SELECT 
    item_purchased, 
    ROUND(AVG(review_rating), 2) as "Average Product Rating"
FROM customer
GROUP BY item_purchased
ORDER BY "Average Product Rating" DESC
LIMIT 5;

--Q4. Compare the average Purchase Amounts between Standard and Express Shipping. 
SELECT 
    shipping_type, 
    ROUND(AVG(purchase_amount), 2) as average_purchase_amount
FROM customer
WHERE shipping_type IN ('Standard', 'Express')
GROUP BY shipping_type;

--Q5. Do subscribed customers spend more? Compare average spend and total revenue 
--between subscribers and non-subscribers.
SELECT 
    subscription_status,
    COUNT(customer_id) AS total_customers,
    ROUND(AVG(purchase_amount), 2) AS avg_spend,
    ROUND(SUM(purchase_amount), 2) AS total_revenue
FROM customer
GROUP BY subscription_status
ORDER BY total_revenue DESC, avg_spend DESC;

--Q6. Which 5 products have the highest percentage of purchases with discounts applied?
SELECT 
    item_purchased,
    ROUND(100.0 * SUM(CASE WHEN discount_applied = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 2) AS discount_rate
FROM customer
GROUP BY item_purchased
ORDER BY discount_rate DESC
LIMIT 5;

--Q7. Segment customers into New, Returning, and Loyal based on their total 
-- number of previous purchases, and show the count of each segment. 
WITH customer_type AS (
    SELECT 
        customer_id, 
        previous_purchases,
        CASE 
            WHEN previous_purchases = 1 THEN 'New'
            WHEN previous_purchases BETWEEN 2 AND 10 THEN 'Returning'
            ELSE 'Loyal'
        END AS customer_segment
    FROM customer
)
SELECT 
    customer_segment, 
    COUNT(*) AS "Number of Customers" 
FROM customer_type 
GROUP BY customer_segment
ORDER BY "Number of Customers" DESC;

--Q8. What are the top 3 most purchased products within each category? 
WITH item_counts AS (
    SELECT 
        category,
        item_purchased,
        COUNT(customer_id) AS total_orders,
        ROW_NUMBER() OVER (PARTITION BY category ORDER BY COUNT(customer_id) DESC) AS item_rank
    FROM customer
    GROUP BY category, item_purchased
)
SELECT 
    item_rank,
    category, 
    item_purchased, 
    total_orders
FROM item_counts
WHERE item_rank <= 3
ORDER BY category, item_rank;

--Q9. Are customers who are repeat buyers (more than 5 previous purchases) also likely to subscribe?
SELECT 
    subscription_status,
    COUNT(customer_id) AS repeat_buyers
FROM customer
WHERE previous_purchases > 5
GROUP BY subscription_status
ORDER BY repeat_buyers DESC;

--Q10. What is the revenue contribution of each age group? 
SELECT 
    age_group,
    ROUND(SUM(purchase_amount), 2) AS total_revenue
FROM customer
GROUP BY age_group
ORDER BY total_revenue DESC;